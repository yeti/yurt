---

- name: Install PostgreSQL
  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
  with_items:
    - postgresql
    - postgresql-contrib
    - python-psycopg2
  tags: packages

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=started enabled=yes

- name: Ensure database is created
  become_user: postgres
  postgresql_db: name={{ db_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present

- name: Get PostgreSQL Versions for Configuration
  shell: ls /etc/postgresql
  register: conf_file_version

- name: Ensure postgres is listening for application servers
  lineinfile: dest="/etc/postgresql/{{ item }}/main/postgresql.conf"
              regexp="listen_addresses"
              line="listen_addresses = 'localhost,{{ db_host }}'"
              state=present
  with_items: "{{ conf_file_version.stdout.split() }}"
  register: postgresql_config
  when: private_application_hosts is defined

- name: Ensure user has access to the database
  become_user: postgres
  postgresql_user: db={{ db_name }}
                   name={{ db_user }}
                   password={{ db_password }}
                   priv=ALL
                   state=present

- name: Ensure user does not have unnecessary privileges
  become_user: postgres
  postgresql_user: name={{ db_user }}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=present

- name: Create Client Authentication file if it does not exist yet
  become_user: postgres
  copy: src=roles/db/templates/pg_hba_config.j2
        dest=/etc/postgresql/{{ item }}/main/pg_hba.conf
        backup=yes
        force=no
  with_items: "{{ conf_file_version.stdout.split() }}"
  register: pga_hba_created
  tags: pga_hba_config

- name: Ensure application servers can access the db server
  lineinfile: dest="/etc/postgresql/{{ item[0] }}/main/pg_hba.conf"
              insertafter="host    all             all             127.0.0.1/32            md5"
              line="host    {{ application_name }}    {{ application_name }}    {{ item[1] }}/32    md5"
              state=present
  register: pga_hba_config
  with_nested:
    - "{{ conf_file_version.stdout.split() }}"
    - "{{ private_application_hosts|default([]) }}"
  tags: pga_hba_config

- name: If we changed the pga_hba.conf file, restart postgresql
  service: name=postgresql state=restarted enabled=yes
  when: pga_hba_created.changed or pga_hba_config.changed or postgresql_config.changed
  tags: pga_hba_config